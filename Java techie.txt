Java techie:
===========

package com.infy;

import java.util.List;

public class Student {

	private Integer id;

	private String name;

	private String genger;

	private Integer age;

	private String department;

	private Integer rank;
	
	private String city;

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getGenger() {
		return genger;
	}

	public void setGenger(String genger) {
		this.genger = genger;
	}

	public Integer getAge() {
		return age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	public String getDepartment() {
		return department;
	}

	public void setDepartment(String department) {
		this.department = department;
	}

	public Integer getRank() {
		return rank;
	}

	public void setRank(Integer rank) {
		this.rank = rank;
	}

	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Override
	public String toString() {
		return "Student [id=" + id + ", name=" + name + ", genger=" + genger + ", age=" + age + ", department="
				+ department + ", rank=" + rank + ", city=" + city + "]";
	}

	public Student(Integer id, String name, String genger, Integer age, String department, Integer rank, String city) {
		super();
		this.id = id;
		this.name = name;
		this.genger = genger;
		this.age = age;
		this.department = department;
		this.rank = rank;
		this.city = city;
	}
	
	
}



package com.infy;

import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.stream.Collectors;

public class StudentMain {

	public static void main(String[] args) {

		Student s1 = new Student(1, "raju", "male", 24, "software", 52, "HYD");
		Student s2 = new Student(4, "kumar", "male", 2, "software", 72, "KERALA");
		Student s7 = new Student(4, "mahesh", "male", 24, "software", 72, "WARANGAL");
		Student s8 = new Student(4, "sai", "male", 4, "software", 72, "KERALA");
		Student s3 = new Student(3, "koraboinathanvika", "female", 24, "whosewife", 76, "WARANGAL");
		Student s4 = new Student(5, "harika", "female", 24, "teacher", 89, "FORTWARANGAL");
		Student s5 = new Student(8, "rajesh", "male", 24, "software", 98, "KONDAPARTHI");

		List<Student> stuList = Arrays.asList(s1, s2, s3, s4, s5, s7, s8);

		// Find the list of students whose rank is between 50 to 75

		List<Student> collect = stuList.stream().filter(student -> student.getRank() > 50 && student.getRank() < 75)
				.collect(Collectors.toList());

		// find the students whos stays WARANAGAL and sort them by their names.desc

		List<Student> collect1=stuList.stream().filter(student -> student.getCity().equals("WARANGAL"))
				.sorted(Comparator.comparing(Student::getName,Comparator.reverseOrder()))
				.collect(Collectors.toList());
		
		// find the all department names.
		
		 Set<String> collect2 = stuList.stream().map(Student::getDepartment).collect(Collectors.toSet());
		 
		 //grouping by the departments
		 //software=5  max numbers of emp
		 
		  Entry<String, Long> entry = stuList.stream()
				 .collect(Collectors.groupingBy(Student::getDepartment,Collectors.counting()))
				 .entrySet().stream().max(Map.Entry.comparingByValue()).get();
		  
		  
		  //avg of male and female based on gender
		  Map<String, Double> collect3 = stuList.stream()
					 .collect(Collectors.groupingBy(Student::getGenger,Collectors.averagingInt(Student::getAge)));

		  
		  //in studenst who have second rank.
		  
		   Student student = stuList.stream()
				  .sorted(Comparator.comparing(Student::getRank)).skip(1).findFirst().get();
				  //.collect(Collectors.toSet());
		  
		  
		 System.out.println(student);

	}

}

	